// Generated by CoffeeScript 1.6.2
(function() {
  var _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.App = (function(_super) {
    __extends(App, _super);

    function App() {
      _ref = App.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    App.prototype.defaults = {
      "gameWon": false,
      "winner": '_house'
    };

    App.prototype.initialize = function() {
      var deck,
        _this = this;

      this.set('deck', deck = new Deck());
      this.set('playerHand', deck.dealPlayer());
      this.set('dealerHand', deck.dealDealer());
      this.player = this.get('playerHand');
      this.dealer = this.get('dealerHand');
      this.player.on("lose", function() {
        return _this.declareWinner(_this.dealer);
      });
      this.dealer.on("lose", function() {
        return _this.declareWinner(_this.player);
      });
      this.player.on("stand", function() {
        return _this.dealerBehavior();
      });
      this.dealer.on("stand", function() {
        return _this.establishWinner();
      });
      return this.player.on("all", function() {
        return _this.trigger('render');
      });
    };

    App.prototype.dealerBehavior = function() {
      this.dealer.dealerPlay();
      this.dealer.reveal();
      return this.establishWinner();
    };

    App.prototype.establishWinner = function() {
      if (this.player.overN(21)) {
        this.declareWinner(this.dealer);
      }
      if (this.dealer.overN(21)) {
        this.declareWinner(this.player);
      }
      if (this.player.bestScore() > this.dealer.bestScore()) {
        return this.declareWinner(this.player);
      } else {
        return this.declareWinner(this.dealer);
      }
    };

    App.prototype.declareWinner = function(winner) {
      this.set('gameWon', true);
      return this.set('winner', winner.getName());
    };

    return App;

  })(Backbone.Model);

}).call(this);

/*
//@ sourceMappingURL=App.map
*/
