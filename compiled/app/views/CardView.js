// Generated by CoffeeScript 1.6.2
(function() {
  var _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.CardView = (function(_super) {
    var icons;

    __extends(CardView, _super);

    function CardView() {
      _ref = CardView.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    CardView.prototype.className = 'container';

    icons = {
      Spades: '<span class="symbol black">&#9824;</span>',
      Diamonds: '<span class="symbol red">&#9830;</span>',
      Hearts: '<span class="symbol red">&#9829;</span>',
      Clubs: '<span class="symbol black">&#9827;</span>'
    };

    CardView.prototype.template = _.template('<div id="card"><figure class="front"><div class="cardName"><%= rankName %> </figure><figure class="back"></figure>');

    CardView.prototype.initialize = function() {
      var _this = this;

      this.model.on('reveal', function() {
        return _this.flip();
      });
      return this.render();
    };

    CardView.prototype.flip = function() {
      return this.$el.removeClass('flipped');
    };

    CardView.prototype.render = function() {
      var delay,
        _this = this;

      console.log(this.model.get('newCard'));
      this.$el.children().detach().end().html;
      this.$el.html(this.template(this.model.attributes));
      this.$el.find('.front').append(icons[this.model.get('suitName')]);
      if (!this.model.get('revealed')) {
        this.$el.find('#card').addClass('flipped');
      }
      delay = function(ms, func) {
        return setTimeout(func, ms);
      };
      return delay(200, function() {
        if (_this.model.get('newCard')) {
          return _this.$el.find('#card').removeClass('flipped');
        }
      });
    };

    return CardView;

  })(Backbone.View);

}).call(this);

/*
//@ sourceMappingURL=CardView.map
*/
